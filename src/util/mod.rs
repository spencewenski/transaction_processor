use std::fs::File;
use std::io;
use currency::Currency;

pub fn get_optional_string(s: &str) -> Option<String> {
    if s.trim().len() > 0 {
        Option::Some(s.to_owned())
    } else {
        Option::None
    }
}

pub fn reader_from_file_name(filename: &str) -> Result<Box<dyn io::Read>, String> {
    match File::open(filename) {
        Ok(f) => Ok(Box::new(io::BufReader::new(f))),
        Err(e) => Err(format!("Unable to open file [{}]: {}", filename, e)),
    }
}

// For some reason, the Currency type prepends a ',' to values in the hundreds, so just remove
// all ',' from the string generated by Currency to avoid such silliness.
pub fn currency_to_string_without_delim(c: &Currency) -> String {
    let s = c.to_string();
    s.replace(",", "")
}
